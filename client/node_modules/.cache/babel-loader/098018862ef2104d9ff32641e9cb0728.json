{"ast":null,"code":"var _jsxFileName = \"/home/bruh/Desktop/werk/Personal/planetviewer/client/src/systems/generatesystem.js\",\n    _s = $RefreshSig$();\n\nimport \"./generatesystem.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { MiniExoPlanet } from \"../components/miniExoPlanet\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GenerateSystem = props => {\n  _s();\n\n  const [planets, setPlanets] = useState();\n  useEffect(() => {\n    setPlanets(makePlanets(RandomNum()));\n    let url = window.location.href;\n    let modifiedUrl = url.split('/');\n    props.setSystem(modifiedUrl[3]);\n  }, []);\n  const zoomOut = {\n    in: {\n      x: 0\n    },\n    out: {\n      opacity: 0\n    }\n  }; // making planets\n\n  function makePlanetName() {\n    let r = Math.random().toString(36).substring(7);\n    return r;\n  }\n\n  let planetTypes = [\"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Gas-giant\", \"Desert-world\", \"Desert-world\", \"Desert-world\", \"Desert-world\", \"Desert-world\", \"Desert-world\", \"Earth-like-world\", \"Earth-like-world\", \"Toxic-world\", \"Frozen-world\", \"Ocean-world\", \"Rocky-world\", \"Toxic-world\", \"Frozen-world\", \"Ocean-world\", \"Rocky-world\", \"Toxic-world\", \"Frozen-world\", \"Ocean-world\", \"Rocky-world\", \"Toxic-world\", \"Frozen-world\", \"Ocean-world\", \"Rocky-world\", \"Toxic-world\", \"Frozen-world\", \"Ocean-world\", \"Rocky-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\", \"Molten-world\"];\n  let positionList = [\"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\"];\n\n  function RandomNum() {\n    return Math.floor(Math.random() * 5 + 3);\n  }\n\n  let randomPlanetIndex = () => {\n    return Math.floor(Math.random() * 55);\n  };\n\n  let randomPositionIndex = () => {\n    return Math.floor(Math.random() * 6);\n  };\n\n  const makePlanets = (Count = 5) => {\n    if (Count > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MiniExoPlanet, {\n          path: `exoPlanets/${planetTypes[randomPlanetIndex()]}`,\n          label: ``,\n          planetType: `${planetTypes[randomPlanetIndex()]} \n            \n           `,\n          position: `${positionList[randomPositionIndex()]}`,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), makePlanets(Count - 1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: \"in\",\n    animate: \"in\",\n    exit: \"out\",\n    variants: zoomOut,\n    className: \"generatedSystem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${props.system}1`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: planets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenerateSystem, \"ZG2VNKbwdLCaMssmogRsOUQQ7Xk=\");\n\n_c = GenerateSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateSystem\");","map":{"version":3,"sources":["/home/bruh/Desktop/werk/Personal/planetviewer/client/src/systems/generatesystem.js"],"names":["React","useEffect","useState","Link","useLocation","useParams","MiniExoPlanet","motion","GenerateSystem","props","planets","setPlanets","makePlanets","RandomNum","url","window","location","href","modifiedUrl","split","setSystem","zoomOut","in","x","out","opacity","makePlanetName","r","Math","random","toString","substring","planetTypes","positionList","floor","randomPlanetIndex","randomPositionIndex","Count","system"],"mappings":"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","sourcesContent":["import \"./generatesystem.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { MiniExoPlanet } from \"../components/miniExoPlanet\";\n\nimport { motion } from \"framer-motion\";\n\n\nexport const GenerateSystem = (props) => {\n  const [planets, setPlanets] = useState();\n  useEffect(() => {\n    setPlanets(makePlanets(RandomNum()));\n    let url = window.location.href\n    let modifiedUrl = url.split('/')\n    \n    props.setSystem(modifiedUrl[3])\n  }, []);\n  \n\n  \n\n  const zoomOut = {\n    in: {\n      x: 0\n    },\n    out: {\n     opacity: 0\n    }\n  }\n\n \n  // making planets\n\n  function makePlanetName() {\n    let r = Math.random().toString(36).substring(7);\n\n    return r;\n  }\n\n  let planetTypes = [\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Gas-giant\",\n    \"Desert-world\",\n    \"Desert-world\",\n    \"Desert-world\",\n    \n    \"Desert-world\",\n    \"Desert-world\",\n    \"Desert-world\",\n    \"Earth-like-world\",\n\n    \"Earth-like-world\",\n    \n    \"Toxic-world\",\n    \"Frozen-world\",\n    \"Ocean-world\",\n    \"Rocky-world\",\n    \"Toxic-world\",\n    \"Frozen-world\",\n    \"Ocean-world\",\n    \"Rocky-world\",\n    \"Toxic-world\",\n    \"Frozen-world\",\n    \"Ocean-world\",\n    \"Rocky-world\",\n    \"Toxic-world\",\n    \"Frozen-world\",\n    \"Ocean-world\",\n    \"Rocky-world\",\n    \"Toxic-world\",\n    \"Frozen-world\",\n    \"Ocean-world\",\n    \"Rocky-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n    \"Molten-world\",\n  ];\n  let positionList = [ \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\"];\n  function RandomNum() {\n    return Math.floor(Math.random() * 5 + 3);\n  }\n  let randomPlanetIndex = () => {\n   return Math.floor(Math.random() * 55 )\n  }\n  let randomPositionIndex = () => {\n    return Math.floor(Math.random() * 6)\n  }\n\n  const makePlanets = (Count = 5) => {\n    if (Count > 0) {\n      return (\n        <div>\n          <MiniExoPlanet\n           \n            \n            path={`exoPlanets/${planetTypes[randomPlanetIndex()] }`}\n            label={``}\n            planetType={`${planetTypes[randomPlanetIndex()] } \n            \n           `}position={`${positionList[randomPositionIndex()]}`}\n          >\n            \n            {\" \"}\n          </MiniExoPlanet>\n          {makePlanets(Count - 1)}\n        </div>\n      );\n    }\n  };\n  \n    \n  \n  \n\n  return (\n    <motion.div \n    initial=\"in\" animate=\"in\" exit=\"out\" variants={zoomOut}\n      className=\"generatedSystem\"\n    >\n      \n      <div className={`${props.system}1`}></div>{\" \"}\n     <div className=\"\">{planets}</div>\n     \n    </motion.div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}