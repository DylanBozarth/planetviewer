{"ast":null,"code":"var _jsxFileName = \"/home/bruh/Desktop/werk/Personal/planetviewer/client/src/interstellar-view/interstellar.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport \"./interstellar-space.scss\";\nimport { Star } from \"../components/star.jsx\";\nimport { gsap } from \"gsap\";\nimport { NavLink } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Interstellar = props => {\n  _s();\n\n  const [exoStars, setExoStars] = useState();\n  useEffect(() => {\n    setExoStars(makeStars(RandomNum()));\n    props.setSystem(\"\");\n  }, []); // animations\n\n  /* Depends on the animation but if you are using transform then yea, \n  change transform-origin on mousedown or click. You might thrash layout though by \n  checking w/h so maybe store the w/h using resize observer first, then calculate \n  the new transform-origin w the mouse offset relative to the element\n  check if user has already been here? \n   */\n  // auto generation stuff\n\n  function makeStarName() {\n    let r = Math.random().toString(36).substring(7);\n    return r;\n  }\n\n  let starList = [\"Red-Giant\", \"Red-Supergiant\", \"Blue-Giant\", \"White-Dwarf\", \"Yellow-Dwarf\", \"Red-Dwarf\", \"Brown-Dwarf\"];\n  let positionList = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\"];\n\n  function RandomNum() {\n    return Math.floor(Math.random() * 5 + 3);\n  }\n\n  const makeStars = function () {\n    let Count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    let randomTypeVariable = starList[Math.floor(Math.random() * 6 + 1)];\n\n    if (Count > 0) {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/${randomTypeVariable}`,\n        className: \"starWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Star, {\n          starName: `${makeStarName()}`,\n          starPosition: positionList[Math.floor(Math.random() * 9 + 1)],\n          starType: `${randomTypeVariable}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), makeStars(Count - 1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this);\n    }\n  };\n\n  const FadeIn = {\n    in: {\n      opacity: 1,\n      duration: 1.2\n    },\n    out: {\n      opacity: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: \"in\",\n    animate: \"in\",\n    exit: \"out\",\n    variants: FadeIn,\n    className: \"interstellar-space\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      className: \"sol-system\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sol-system\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sunLabel text-center\",\n          children: \"Our Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-placement\",\n      children: exoStars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Interstellar, \"nr8UAFydW8wXOdkIzxBxlwdPuVc=\");\n\n_c = Interstellar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interstellar\");","map":{"version":3,"sources":["/home/bruh/Desktop/werk/Personal/planetviewer/client/src/interstellar-view/interstellar.jsx"],"names":["Star","gsap","NavLink","motion","useEffect","useState","Interstellar","props","exoStars","setExoStars","makeStars","RandomNum","setSystem","makeStarName","r","Math","random","toString","substring","starList","positionList","floor","Count","randomTypeVariable","FadeIn","in","opacity","duration","out"],"mappings":";;;;AAAA,OAAO,2BAAP;AACA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACC,SAAS,CAACC,SAAS,EAAV,CAAV,CAAX;AACAJ,IAAAA,KAAK,CAACK,SAAN,CAAgB,EAAhB;AACD,GAHQ,EAGN,EAHM,CAAT,CAFqC,CAOrC;;AACA;AACF;AACA;AACA;AACA;AACA;AAEE;;AACA,WAASC,YAAT,GAAwB;AACtB,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAR;AAEA,WAAOJ,CAAP;AACD;;AAED,MAAIK,QAAQ,GAAG,CACb,WADa,EAEb,gBAFa,EAGb,YAHa,EAIb,aAJa,EAKb,cALa,EAMb,WANa,EAOb,aAPa,CAAf;AASA,MAAIC,YAAY,GAAG,CACjB,KADiB,EAEjB,KAFiB,EAGjB,OAHiB,EAIjB,MAJiB,EAKjB,MALiB,EAMjB,KANiB,EAOjB,OAPiB,EAQjB,OARiB,EASjB,MATiB,EAUjB,KAViB,CAAnB;;AAYA,WAAST,SAAT,GAAqB;AACnB,WAAOI,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAP;AACD;;AAED,QAAMN,SAAS,GAAG,YAAe;AAAA,QAAdY,KAAc,uEAAN,CAAM;AAC/B,QAAIC,kBAAkB,GAAGJ,QAAQ,CAACJ,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAD,CAAjC;;AACA,QAAIM,KAAK,GAAG,CAAZ,EAAe;AACb,0BAEE,QAAC,OAAD;AACE,QAAA,EAAE,EAAG,IAAGC,kBAAmB,EAD7B;AAGE,QAAA,SAAS,EAAC,aAHZ;AAAA,gCAKE,QAAC,IAAD;AAEE,UAAA,QAAQ,EAAG,GAAEV,YAAY,EAAG,EAF9B;AAGE,UAAA,YAAY,EAAEO,YAAY,CAACL,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAD,CAH5B;AAIE,UAAA,QAAQ,EAAG,GAAEO,kBAAmB;AAJlC;AAAA;AAAA;AAAA;AAAA,iBALF,EAWGb,SAAS,CAACY,KAAK,GAAG,CAAT,CAXZ;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAgBD;AACF,GApBD;;AAsBA,QAAME,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,CADP;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADS;AAKbC,IAAAA,GAAG,EAAE;AACHF,MAAAA,OAAO,EAAE;AADN;AALQ,GAAf;AAUA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,QAAQ,EAAEF,MAJZ;AAKE,IAAA,SAAS,EAAC,oBALZ;AAAA,4BAOE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmChB;AAAnC;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/FM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import \"./interstellar-space.scss\";\nimport { Star } from \"../components/star.jsx\";\nimport { gsap } from \"gsap\";\nimport { NavLink } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nexport const Interstellar = (props) => {\n  const [exoStars, setExoStars] = useState();\n  useEffect(() => {\n    setExoStars(makeStars(RandomNum()));\n    props.setSystem(\"\");\n  }, []);\n\n  // animations\n  /* Depends on the animation but if you are using transform then yea, \n  change transform-origin on mousedown or click. You might thrash layout though by \n  checking w/h so maybe store the w/h using resize observer first, then calculate \n  the new transform-origin w the mouse offset relative to the element\n  check if user has already been here? \n   */\n\n  // auto generation stuff\n  function makeStarName() {\n    let r = Math.random().toString(36).substring(7);\n\n    return r;\n  }\n\n  let starList = [\n    \"Red-Giant\",\n    \"Red-Supergiant\",\n    \"Blue-Giant\",\n    \"White-Dwarf\",\n    \"Yellow-Dwarf\",\n    \"Red-Dwarf\",\n    \"Brown-Dwarf\",\n  ];\n  let positionList = [\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"ten\",\n  ];\n  function RandomNum() {\n    return Math.floor(Math.random() * 5 + 3);\n  }\n  \n  const makeStars = (Count = 5) => {\n    let randomTypeVariable = starList[Math.floor(Math.random() * 6 + 1)];\n    if (Count > 0) {\n      return (\n     \n        <NavLink\n          to={`/${randomTypeVariable}`}\n          \n          className=\"starWrapper\"\n        >\n          <Star\n          \n            starName={`${makeStarName()}`}\n            starPosition={positionList[Math.floor(Math.random() * 9 + 1)]}\n            starType={`${randomTypeVariable}`}\n          ></Star>\n          {makeStars(Count - 1)}\n        </NavLink>\n      );\n    }\n  };\n\n  const FadeIn = {\n    in: {\n      opacity: 1,\n      duration: 1.2,\n    },\n    out: {\n      opacity: 0,\n    },\n  };\n\n  return (\n    <motion.div\n      initial=\"in\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={FadeIn}\n      className=\"interstellar-space\"\n    >\n      <NavLink to=\"/\" className=\"sol-system\">\n        <div className=\"sol-system\">\n          <p className=\"sunLabel text-center\">Our Sun</p>\n        </div>\n      </NavLink>\n      <div className=\"random-placement\">{exoStars}</div>\n    </motion.div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}